"use strict";
// Original file: deps/envoy-api/envoy/extensions/transport_sockets/tls/v3/common.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports._envoy_extensions_transport_sockets_tls_v3_CertificateValidationContext_TrustChainVerification = void 0;
// Original file: deps/envoy-api/envoy/extensions/transport_sockets/tls/v3/common.proto
/**
 * Peer certificate verification mode.
 */
exports._envoy_extensions_transport_sockets_tls_v3_CertificateValidationContext_TrustChainVerification = {
    /**
     * Perform default certificate verification (e.g., against CA / verification lists)
     */
    VERIFY_TRUST_CHAIN: 'VERIFY_TRUST_CHAIN',
    /**
     * Connections where the certificate fails verification will be permitted.
     * For HTTP connections, the result of certificate verification can be used in route matching. (
     * see :ref:`validated <envoy_v3_api_field_config.route.v3.RouteMatch.TlsContextMatchOptions.validated>` ).
     */
    ACCEPT_UNTRUSTED: 'ACCEPT_UNTRUSTED',
};
//# sourceMappingURL=CertificateValidationContext.js.map