"use strict";
// Original file: deps/envoy-api/envoy/config/core/v3/protocol.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports._envoy_config_core_v3_HttpProtocolOptions_HeadersWithUnderscoresAction = void 0;
// Original file: deps/envoy-api/envoy/config/core/v3/protocol.proto
/**
 * Action to take when Envoy receives client request with header names containing underscore
 * characters.
 * Underscore character is allowed in header names by the RFC-7230 and this behavior is implemented
 * as a security measure due to systems that treat '_' and '-' as interchangeable. Envoy by default allows client request headers with underscore
 * characters.
 */
exports._envoy_config_core_v3_HttpProtocolOptions_HeadersWithUnderscoresAction = {
    /**
     * Allow headers with underscores. This is the default behavior.
     */
    ALLOW: 'ALLOW',
    /**
     * Reject client request. HTTP/1 requests are rejected with the 400 status. HTTP/2 requests
     * end with the stream reset. The "httpN.requests_rejected_with_underscores_in_headers" counter
     * is incremented for each rejected request.
     */
    REJECT_REQUEST: 'REJECT_REQUEST',
    /**
     * Drop the client header with name containing underscores. The header is dropped before the filter chain is
     * invoked and as such filters will not see dropped headers. The
     * "httpN.dropped_headers_with_underscores" is incremented for each dropped header.
     */
    DROP_HEADER: 'DROP_HEADER',
};
//# sourceMappingURL=HttpProtocolOptions.js.map